"""Add School model and school_id to existing models

Revision ID: fca5ede8dd9f
Revises: b322bf216fd6
Create Date: 2025-03-31 08:06:07.599307

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fca5ede8dd9f'
down_revision = 'b322bf216fd6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('basic_knowledge_items', schema=None) as batch_op:
        # カラムが存在するかチェックしてから追加
        from sqlalchemy import inspect
        inspector = inspect(op.get_bind())
        columns = [column['name'] for column in inspector.get_columns('basic_knowledge_items')]
        if 'school_id' not in columns:
            batch_op.add_column(sa.Column('school_id', sa.Integer(), nullable=True))
            batch_op.create_foreign_key(None, 'schools', ['school_id'], ['id'])

    # 他のテーブルも同様に修正
    with op.batch_alter_table('classes', schema=None) as batch_op:
        columns = [column['name'] for column in inspector.get_columns('classes')]
        if 'school_id' not in columns:
            batch_op.add_column(sa.Column('school_id', sa.Integer(), nullable=False))
            batch_op.create_foreign_key(None, 'schools', ['school_id'], ['id'])

    with op.batch_alter_table('learning_paths', schema=None) as batch_op:
        columns = [column['name'] for column in inspector.get_columns('learning_paths')]
        if 'school_id' not in columns:
            batch_op.add_column(sa.Column('school_id', sa.Integer(), nullable=True))
            batch_op.create_foreign_key(None, 'schools', ['school_id'], ['id'])

    with op.batch_alter_table('problem_categories', schema=None) as batch_op:
        columns = [column['name'] for column in inspector.get_columns('problem_categories')]
        if 'school_id' not in columns:
            batch_op.add_column(sa.Column('school_id', sa.Integer(), nullable=True))
            batch_op.create_foreign_key(None, 'schools', ['school_id'], ['id'])

    with op.batch_alter_table('text_sets', schema=None) as batch_op:
        columns = [column['name'] for column in inspector.get_columns('text_sets')]
        if 'school_id' not in columns:
            batch_op.add_column(sa.Column('school_id', sa.Integer(), nullable=True))
            batch_op.create_foreign_key(None, 'schools', ['school_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('text_sets', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('school_id')

    with op.batch_alter_table('problem_categories', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('school_id')

    with op.batch_alter_table('learning_paths', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('school_id')

    with op.batch_alter_table('classes', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('school_id')

    with op.batch_alter_table('basic_knowledge_items', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('school_id')

    # ### end Alembic commands ###
