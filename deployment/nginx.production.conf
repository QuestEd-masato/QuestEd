# nginx.production.conf - 本番環境用Nginx設定

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ログ形式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';
    
    log_format security '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       '"$http_x_real_ip" "$ssl_protocol" "$ssl_cipher"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # パフォーマンス設定
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;
    server_tokens off;  # セキュリティ: バージョン非表示

    # バッファサイズ設定
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Gzip圧縮
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;

    # セキュリティヘッダー
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' https://fonts.gstatic.com; connect-src 'self'" always;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=50r/s;

    # アップストリーム設定
    upstream quested_app {
        least_conn;
        server web:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # HTTPからHTTPSへのリダイレクト
    server {
        listen 80;
        server_name _;
        
        # Let's Encrypt証明書取得用
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # セキュリティログ
        access_log /var/log/nginx/security.log security;
        
        # その他のリクエストはHTTPSにリダイレクト
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS設定
    server {
        listen 443 ssl http2;
        server_name _;

        # SSL証明書
        ssl_certificate /etc/letsencrypt/live/YOUR_DOMAIN/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/YOUR_DOMAIN/privkey.pem;
        
        # SSL設定強化
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        
        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/letsencrypt/live/YOUR_DOMAIN/chain.pem;

        # セキュリティヘッダー
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        # セキュリティログ
        access_log /var/log/nginx/security.log security;

        # 認証系エンドポイントのRate Limiting
        location ~* ^/(login|register|reset|auth) {
            limit_req zone=auth burst=3 nodelay;
            proxy_pass http://quested_app;
            include /etc/nginx/proxy_params;
        }

        # API エンドポイントのRate Limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://quested_app;
            include /etc/nginx/proxy_params;
        }

        # 静的ファイル配信
        location /static/ {
            limit_req zone=static burst=100 nodelay;
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # 静的ファイルのセキュリティ
            location ~* \.(js|css)$ {
                add_header X-Content-Type-Options nosniff;
            }
        }

        location /uploads/ {
            limit_req zone=static burst=50 nodelay;
            alias /var/www/uploads/;
            expires 1d;
            add_header Cache-Control "public";
            
            # アップロードファイルの実行を禁止
            location ~* \.(php|jsp|asp|sh|py|pl|exe)$ {
                deny all;
            }
        }

        # アプリケーションへのプロキシ
        location / {
            # DDoS対策
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://quested_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # タイムアウト設定
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # バッファサイズ
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # ヘルスチェック
        location /health {
            proxy_pass http://quested_app/health;
            access_log off;
        }

        # 管理系エンドポイントへのアクセス制限
        location /admin/ {
            # 特定IPからのみアクセス許可
            # allow 192.168.1.0/24;
            # deny all;
            
            limit_req zone=auth burst=5 nodelay;
            proxy_pass http://quested_app;
            include /etc/nginx/proxy_params;
        }

        # セキュリティ: 不要なファイルへのアクセス拒否
        location ~* \.(htaccess|htpasswd|ini|log|sh|sql|conf)$ {
            deny all;
        }

        # セキュリティ: .git ディレクトリへのアクセス拒否
        location ~ /\.git {
            deny all;
        }
    }
}

# proxy_params ファイルの内容（別ファイルとして保存）
# proxy_set_header Host $http_host;
# proxy_set_header X-Real-IP $remote_addr;
# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# proxy_set_header X-Forwarded-Proto $scheme;